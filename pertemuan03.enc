{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N=5\n",
    "print(\"N=\",N)\n",
    "N+=1\n",
    "print(\"N=\",N)\n",
    "N-=4\n",
    "print(\"N=\",N)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(10):\n",
    "    print(i,end=\" \")\n",
    "print()\n",
    "\n",
    "for i in range(1,10):\n",
    "    print(i,end=\" \")\n",
    "print()\n",
    "\n",
    "for i in range(1,10,2):\n",
    "    print(i,end=\" \")\n",
    "print()\n",
    "\n",
    "for i in range(10,1,-1):\n",
    "    print(i,end=\" \")\n",
    "print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N=int(input(\"Banyaknya Suku =\"))\n",
    "total=0\n",
    "print(\"for :\")\n",
    "for i in range(1,N):\n",
    "    total+=i\n",
    "    print(i,\" + \",end=\"\")\n",
    "total+=N\n",
    "print(N,\"=\",total)\n",
    "\n",
    "print(\"while :\")\n",
    "i=1;total=0\n",
    "while i<N:\n",
    "    total+=i\n",
    "    print(i,\" + \",end=\"\")\n",
    "    i+=1\n",
    "total+=i\n",
    "print(i,\"=\",total)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(\"for:\")\n",
    "for i in range(1,11):\n",
    "    if i<10:\n",
    "        print(i,\",\",end=\"\")\n",
    "    else:\n",
    "        print(i,\".\")\n",
    "print(\"\\nWhile:\")\n",
    "i=1\n",
    "while i<=10:\n",
    "    print(i,end=\"  \")\n",
    "    i+=1\n",
    "    \n",
    "print()\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N=int(input(\"Banyaknya suku = \"))\n",
    "for i in range(1,N):\n",
    "    print(i,\",\",end=\"\")\n",
    "print(N,\".\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N=int(input(\"Banyaknya suku = \"))\n",
    "for i in range(1,N,2):\n",
    "    print(i,\" adalah bilangan ganjil\")\n",
    "    print(i+1,\" adalah bilangan genap\")\n",
    "\n",
    "if N%2 !=0:\n",
    "    print(N,\" adalah bilangan ganji\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N=2;M=3\n",
    "print(\"for :\")\n",
    "for i in range(1,N+1):\n",
    "    for j in range(1,M+1):\n",
    "        print(i,\"+\",j,\"=\",i+j)\n",
    "print(\"\\nWile :\")\n",
    "i=1\n",
    "while i<=N:\n",
    "    j=1\n",
    "    while j<=M:\n",
    "        print(i,\"+\",j,\"=\",i+j)\n",
    "        j+=1\n",
    "        \n",
    "    i+=1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N=int(input(\"Banyaknya data =\"))\n",
    "B=-999\n",
    "for i in range(N):    \n",
    "    B1=int(input(\"Data ke -\"+str(i+1)+\"=\"))\n",
    "    if B<B1:\n",
    "        B=B1\n",
    "\n",
    "print(\"Bilangan Terbesar =\",B)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N=int(input(\"Banyaknya Data =\"))\n",
    "if N>0:\n",
    "    i=1\n",
    "    x=int(input(\"Data ke -\"+str(i)+\"=\"))\n",
    "    max=x;min=x;total=x\n",
    "    for i in range(2,N+1):\n",
    "        x=int(input(\"Data ke -\"+str(i)+\"=\"))\n",
    "        total+=x\n",
    "        if max<x:\n",
    "            max=x\n",
    "        elif min>x:\n",
    "            min=x\n",
    "    distance=max-min\n",
    "    rata2=total/N\n",
    "    print(\"Bilangan terbesar = \",max)\n",
    "    print(\"Bilangan terkecil = \",min)\n",
    "    print(\"Range             = \",distance)\n",
    "    print(\"Total             = \",total)\n",
    "    print(\"Rata rata         = \",rata2)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data masukan tidak boleh urut:\n",
      "Banyaknya Data =3\n",
      "Data ke -1=5\n",
      "Data ke -2=2\n",
      "Data ke -3=7\n",
      "Bilangan terbesar =  7\n",
      "Bilangan terkecil =  2\n",
      "Range             =  5\n",
      "Total             =  14\n",
      "Rata rata         =  4.666666666666667\n"
     ]
    }
   ],
   "source": [
    "# kondisi data dalam keadaan tidak terurut\n",
    "print(\"Data masukan tidak boleh urut:\")\n",
    "N=int(input(\"Banyaknya Data =\"))\n",
    "if N>0:\n",
    "    i=1 ;j=0;k=0   \n",
    "    max=-9999;min=9999;total=0\n",
    "    while i<=N:\n",
    "        x=int(input(\"Data ke -\"+str(i)+\"=\"))\n",
    "        total+=x\n",
    "        if max<x:\n",
    "            max=x\n",
    "            j+=1\n",
    "        elif min>x:\n",
    "            min=x\n",
    "            k+=1\n",
    "        i+=1\n",
    "    if j*k !=0:    \n",
    "        distance=max-min\n",
    "        rata2=total/N\n",
    "        print(\"Bilangan terbesar = \",max)\n",
    "        print(\"Bilangan terkecil = \",min)\n",
    "        print(\"Range             = \",distance)\n",
    "        print(\"Total             = \",total)\n",
    "        print(\"Rata rata         = \",rata2)\n",
    "    else:\n",
    "        print(\"kondisi data terurut\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data masukan tidak boleh urut:\n",
      "Data ke -1=5\n",
      "Data ke -1=4\n",
      "Data ke -2=8\n",
      "Data ke -2=1\n",
      "Data ke -3=9999\n",
      "Bilangan terbesar =  8\n",
      "Bilangan terkecil =  1\n",
      "Range             =  7\n",
      "Total             =  18\n",
      "Rata rata         =  6.0\n"
     ]
    }
   ],
   "source": [
    "# kondisi data dalam keadaan tidak terurut\n",
    "print(\"Data masukan tidak boleh urut:\")\n",
    "\n",
    "i=0 ;j=0;k=0   \n",
    "max=-9999;min=9999;total=0\n",
    "x=int(input(\"Data ke -\"+str(i+1)+\"=\"))\n",
    "while x!=9999:        \n",
    "    total+=x\n",
    "    if max<x:\n",
    "        max=x\n",
    "        j+=1\n",
    "    elif min>x:\n",
    "        min=x\n",
    "        k+=1\n",
    "        i+=1\n",
    "    x=int(input(\"Data ke -\"+str(i+1)+\"=\"))\n",
    "if i>0:    \n",
    "    if j*k !=0:    \n",
    "        distance=max-min\n",
    "        rata2=total/N\n",
    "        print(\"Bilangan terbesar = \",max)\n",
    "        print(\"Bilangan terkecil = \",min)\n",
    "        print(\"Range             = \",distance)\n",
    "        print(\"Total             = \",total)\n",
    "        print(\"Rata rata         = \",rata2)\n",
    "    else:\n",
    "        print(\"kondisi data terurut\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
